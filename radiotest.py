# -*- coding: utf-8 -*-
"""RadioTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nPBTc4-_NTOdLGL1XJBMLdGb-cQIXVrE
"""

#############################################################################
                             #Imports#
#############################################################################
import math
from google.colab import files
import cv2
import matplotlib.pyplot as plt
 #Explicación
 #Pyhton es capaz de usar una enorme cantidad de librerias por lo que el ambiente no activa todas al mismo tiempo más que las básicas. 
 #Para usos más especificos hay que importar las bibliotecas en este caso
 
 #math es para operaciones matemáticas un poco más complejas como trigonometría y constantes de uso común como pi

#############################################################################
                             #Carga de Fotos#
#############################################################################
uploaded1 = files.upload()
uploaded2 = files.upload()
img=cv2.imread('primera.png')
img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
plt.imshow(img)

img2=cv2.imread('segunda.png')
img2=cv2.cvtColor(img2,cv2.COLOR_BGR2RGB)
plt.imshow(img2)

image1 = cv2.imread('primera.png', 0)
count1 = cv2.countNonZero(image1)
print(count1)

image2 = cv2.imread('segunda.png', 0)
count2 = cv2.countNonZero(image2)
print(count2)
a=count2/count1
print(a)

#############################################################################
                 #Validación de entrada del usuario#
#############################################################################
while True:
    try:        input_a = float(input("Por favor digite la elevación de la primera imagen mostrada en Skyview como Elevation sin unidades: "))
    except ValueError:
        print("Sus datos no son validos, por favor digite el número solicitado")
        continue
    else:
        break

while True:
    try:         input_b = float(input("Por favor digite la elevación de la segunda imagen mostrada en Skyview como Elevation sin unidades: "))
    except ValueError:
        print("Sus datos no son validos, por favor digite el número solicitado")        
        continue
    else:
        break
 #Explicación
 #Solicita dos valores correspondientes a la elevación en la foto 1 y 2 suministradas por Skyview y revisa si lo digitado corresponde a un float
 #una variable que puede contener un número real. Si no se dijita un número real, por ejemplo una letra, regresa que el dato ingresado no es valido y se vuelve a habilitar el
 #ingreso de datos.

#############################################################################
                             #Fórmula#
############################################################################## De define una razón entre los diametros aparentes obtenido de las fotos, en un futuro se va a obtener de analisis de imagenes por ahora se usa uno de pruebaa=1.007;
#Definimos la distancia entre la Luna y la Tierra, es una constante y como no es el objetivo de medición del trabajo se va a usar como tal.
DLT=384400;
#math maneja ángulos como radianes, entonces hacemos la conversión
A1=input_a*math.pi/180
A2=input_b*math.pi/180
# Numerador de nuestra fórmula. pow(a,2) es la manera de definir a elevado al cuadrado
B= DLT*(pow(a,2)-1)
# Se obtiene el seno de ambas elevaciones
C=a*math.sin(A1)
D=math.sin(A2)
# cálculo por partes para obtener el denominador
E=D-C
F=2*E
#Hacemos la división para obtener la respuesta buscada
R=B/F
#Calculamos la diferencia entre el resultado obtenido 
Diff=(6371-R)/6371 *100

#############################################################################
                             #Resultados#
#############################################################################
print("El valor del radio de la Tierra calculado es de", R,"kilometros")
print("La diferencia entre el cálculo y el valor estándar es de",Diff,"%")